SET(APPLICATION_NAME QtExe)

#===================================================

BEGIN_TARGET(${APPLICATION_NAME})

#===================================================
# ������Ŀ�汾
VERSIONED_TARGET(${APPLICATION_NAME} 1 0 0 102)

# Note the version no is Mmmpp for Major/minor/patch, 0-padded, thus '10100' for 1.1.0

SET(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} /NODEFAULTLIB:LIBCMTD")

set(CMAKE_AUTOMOC ON)
set(CMAKE_INCLUDE_CURRENT_DIR ON) 

ADD_DEFINITIONS(-DCONSOLE)
#===================================================
INCLUDE_DIRECTORIES(${RIBBON_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${OSG_INCLUDE_DIR} ${QT_INCLUDES})  
INCLUDE_DIRECTORIES(${OPENTHREADS_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${PROJECT_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${PROJECT_SRC_DIR}/library_src/glog)
INCLUDE_DIRECTORIES(${PROJECT_SRC_DIR}/library_src/QtUtility)
INCLUDE_DIRECTORIES(${PROJECT_SRC_DIR}/library_src/color_picker)
INCLUDE_DIRECTORIES(${PROJECT_SRC_DIR}/library_src/UtilityKit)
INCLUDE_DIRECTORIES(${PROJECT_SRC_DIR}/library_src/QtTreePropertyBrowser)

#===================================================
MAKE_CLASS_FILES(${APPLICATION_NAME} 
	Q_CLASS 
	PARENT QWidget
	QStyleSheetWidget1)

MAKE_CLASS_FILES(${APPLICATION_NAME} 
	Q_CLASS 
	PARENT QWidget 
	SUB_DIR_NAME "OSGStudy" 
	widget_OSGStudy)
#===================================================
#����UI��Դ
FILE(GLOB ${APPLICATION_NAME}_QT_UIS "*.ui")

# ����ͼƬ��Դ
FILE(GLOB ${APPLICATION_NAME}_QT_RCS "*.qrc")

# ����h����
FILE(GLOB ${APPLICATION_NAME}_HEADERS "*.h")

# ����cpp����
FILE(GLOB ${APPLICATION_NAME}_SRCS "*.cpp")
#===================================================
VIRE_TARGET_SERACH_SUB_DIRS_FILES(${APPLICATION_NAME} 
	QtGUIStudy 
	QMLStudy 
	QtCoreStudy 
	BoostStudy
	OSGStudy
)

#===================================================
#Qt����UI��QRC�ļ�
VIRE_TARGET_PROCESS_QT_RESOURCES_UIS(${APPLICATION_NAME})

file(TIMESTAMP ./main.cpp TT)
MESSAGE("File TIMESTAMP: ${TT}")
STRING(TIMESTAMP "%Y-%m-%dT%H:%M:%S" FS)
MESSAGE("File TIMESTAMP: ${FS}")
#===================================================
SET(_${APPLICATION_NAME}_HEADER
	${${APPLICATION_NAME}_UI_HDRS}
	${${APPLICATION_NAME}_QT_UIS}
	${${APPLICATION_NAME}_HEADERS}
)

SET(_${APPLICATION_NAME}_CPP 		
	${VERSIONED_LIB_RC} 
	${${APPLICATION_NAME}_SRCS}
	${${APPLICATION_NAME}_RC_SRCS}
	${${APPLICATION_NAME}_QT_RCS}
)

#�������ļ��ɿ�ִ���ļ�
ADD_EXECUTABLE(${APPLICATION_NAME} 
	${_${APPLICATION_NAME}_HEADER}
	${_${APPLICATION_NAME}_CPP}
)

#===================================================
#����Link������
TARGET_LINK_LIBRARIES(${APPLICATION_NAME}
	${XMLFOUNDATION_LIBRARIES}
	glog
	UtilityKit
	QtColorPickerLib
)

LINK_WITH_VARIABLES(${APPLICATION_NAME} 
		QTUTILITY_LIBRARY
		RIBBON_LIBRARY
		Boost_DATE_TIME_LIBRARY
		Boost_SIGNAL_LIBRARY
)

IF ( Qt5Widgets_FOUND )
    qt5_use_modules( ${APPLICATION_NAME} Gui Widgets OpenGL Xml Svg Test Quick Concurrent)
ELSE()   
TARGET_LINK_LIBRARIES(${APPLICATION_NAME}
${QT_LIBRARIES} 
	${QT_QTOPENGL_LIBRARY} 
	${QT_QTCORE_LIBRARY} 
	${QT_QTGUI_LIBRARY} 
	${QT_QTSVG_LIBRARY}
	${QT_QTTEST_LIBRARY}
	${QT_QTXML_LIBRARY}
)
ENDIF( Qt5Widgets_FOUND )
#===================================================
#configure_file(app.config ${PROJECT_SOURCE_DIR}/bin/Debug @ONLY) 
#configure_file(app.config ${PROJECT_SOURCE_DIR}/bin/Release @ONLY) 

# ���ù��̵�����
SET (TARGET_OUTPUT_NAME ${APPLICATION_NAME} )
SET_TARGET_PROPERTIES( ${APPLICATION_NAME} PROPERTIES OUTPUT_NAME ${TARGET_OUTPUT_NAME} )
SET_TARGET_PROPERTIES(${APPLICATION_NAME} PROPERTIES DEBUG_OUTPUT_NAME "${TARGET_OUTPUT_NAME}${CMAKE_DEBUG_POSTFIX}")
SET_TARGET_PROPERTIES(${APPLICATION_NAME} PROPERTIES RELEASE_OUTPUT_NAME "${TARGET_OUTPUT_NAME}${CMAKE_RELEASE_POSTFIX}")

# ������QT designer ����
SET_TARGET_PROPERTIES(${APPLICATION_NAME} PROPERTIES VS_KEYWORD "Qt4VSv1.0")

# ������Ŀ��ǩ.
SET_TARGET_PROPERTIES(${APPLICATION_NAME} PROPERTIES PROJECT_LABEL "App ${APPLICATION_NAME}")
SET_TARGET_PROPERTIES(${APPLICATION_NAME} PROPERTIES FOLDER "App") 
 
#===================================================
VIRE_TARGET_SOURCE_GROUP(${APPLICATION_NAME})
#===================================================

#������ϼ�Ŀ¼��ȡ��debug, release Ŀ¼
IF (MSVC_IDE) 
	SET_TARGET_PROPERTIES( ${APPLICATION_NAME} PROPERTIES RUNTIME_OUTPUT_DIRECTORY  ${PROJECT_SOURCE_DIR}/bin )
	SET_TARGET_PROPERTIES( ${APPLICATION_NAME} PROPERTIES RUNTIME_OUTPUT_DIRECTORY_DEBUG ${PROJECT_SOURCE_DIR}/bin/Debug )
	SET_TARGET_PROPERTIES( ${APPLICATION_NAME} PROPERTIES RUNTIME_OUTPUT_DIRECTORY_RELEASE ${PROJECT_SOURCE_DIR}/bin/Release)
ENDIF() 
 
END_TARGET(${APPLICATION_NAME})
  
  
# debug ��װ
INSTALL(
TARGETS ${APPLICATION_NAME}
RUNTIME DESTINATION bin/Debug
)
	

# release ��װ
INSTALL(
TARGETS ${APPLICATION_NAME}
RUNTIME DESTINATION bin/release
)
	
INSTALL(CODE "MESSAGE(\"Installing App:${APPLICATION_NAME}..\")")





