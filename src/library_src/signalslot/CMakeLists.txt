SET(LIB_NAME signalslot)

# 定义项目版本
SET(LIB_MAJOR_VERSION 1)
SET(LIB_MINOR_VERSION 0)
SET(LIB_PATCH_VERSION 1)
SET(LIB_SOVERSION 015)

SET(LIB_VERSION  ${LIB_MAJOR_VERSION}.${LIB_MINOR_VERSION}.${LIB_PATCH_VERSION})
MESSAGE("LIB version:" ${LIB_VERSION})

ADD_DEFINITIONS(-DSIGNALSLOT_LIB)

FILE(GLOB ${LIB_NAME}_HDRS "./*.h")
FILE(GLOB ${LIB_NAME}_SRCS "./*.cpp")


INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})

FIND_PACKAGE(OpenThreads REQUIRED)
INCLUDE_DIRECTORIES(${OPENTHREADS_INCLUDE_DIR})

IF(MSVC)
    SET(${LIB_NAME}_VERSION_RC "${CMAKE_CURRENT_BINARY_DIR}/${LIB_NAME}.rc")
    CONFIGURE_FILE("${CMAKE_CURRENT_SOURCE_DIR}/${LIB_NAME}.rc.in"
                   "${${LIB_NAME}_VERSION_RC}")
ENDIF()

#增加相关文件打包文件
ADD_LIBRARY (${LIB_NAME} SHARED
	${${LIB_NAME}_HDRS}	
	${${LIB_NAME}_SRCS}
	${${LIB_NAME}_VERSION_RC}	
)

LINK_WITH_VARIABLES(${LIB_NAME} 
		OPENTHREADS_LIBRARY
)

SET_PROPERTY(GLOBAL PROPERTY USE_FOLDERS On)
SET_TARGET_PROPERTIES(${LIB_NAME} PROPERTIES FOLDER "Lib")

# 设置项目标签.
SET_TARGET_PROPERTIES(${LIB_NAME} PROPERTIES PROJECT_LABEL "Win32Lib ${LIB_NAME}")

#SET_TARGET_PROPERTIES( ${LIB_NAME} PROPERTIES RUNTIME_OUTPUT_DIRECTORY  "${PROJECT_SOURCE_DIR}/bin/" )
#SET_TARGET_PROPERTIES( ${LIB_NAME} PROPERTIES RUNTIME_OUTPUT_DIRECTORY_DEBUG "${PROJECT_SOURCE_DIR}/bin/debug/" )
#SET_TARGET_PROPERTIES( ${LIB_NAME} PROPERTIES RUNTIME_OUTPUT_DIRECTORY_RELEASE "${PROJECT_SOURCE_DIR}/bin/release/") 


SOURCE_GROUP(
    "Header Files"
    FILES  ${${LIB_NAME}_HDRS} 
)

#====================================================================
IF(CMAKE_CL_64)
SET(INSTALL_LIB_DIR lib/x64)
SET(INSTALL_BIN_DIR bin/x64)
ELSE(CMAKE_CL_64)
SET(INSTALL_LIB_DIR lib)
SET(INSTALL_BIN_DIR bin)
ENDIF(CMAKE_CL_64)

INSTALL(CODE "MESSAGE(\"==========Installing Lib ${LIB_NAME} To ${CMAKE_INSTALL_PREFIX}/${LIB_NAME}...\")")
INSTALL(FILES ${${LIB_NAME}_HDRS} DESTINATION ${CMAKE_INSTALL_PREFIX}/${LIB_NAME}/Include)
IF(CMAKE_BUILD_TYPE MATCHES Debug)
	INSTALL(
	   TARGETS ${LIB_NAME}
	   RUNTIME DESTINATION ${CMAKE_INSTALL_PREFIX}/${LIB_NAME}/${INSTALL_BIN_DIR} 
	   LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/${LIB_NAME}/${INSTALL_LIB_DIR}
	   ARCHIVE DESTINATION ${CMAKE_INSTALL_PREFIX}/${LIB_NAME}/${INSTALL_LIB_DIR}
	)
ELSE(CMAKE_BUILD_TYPE MATCHES Debug)
	INSTALL(
	   TARGETS ${LIB_NAME}
	   RUNTIME DESTINATION ${CMAKE_INSTALL_PREFIX}/${LIB_NAME}/${INSTALL_BIN_DIR}
	   LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/${LIB_NAME}/${INSTALL_LIB_DIR}
	   ARCHIVE DESTINATION ${CMAKE_INSTALL_PREFIX}/${LIB_NAME}/${INSTALL_LIB_DIR}
	)
ENDIF(CMAKE_BUILD_TYPE MATCHES Debug)