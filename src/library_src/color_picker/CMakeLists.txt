SET(LIB_NAME QtColorPickerLib)

MESSAGE("**********************Setting up ${LIB_NAME}********************")

# ������Ŀ�汾
SET(CPACK_PACKAGE_VERSION_MAJOR 1)
SET(CPACK_PACKAGE_VERSION_MINOR 1)
SET(CPACK_PACKAGE_VERSION_PATCH 2)


SET(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} /NODEFAULTLIB:LIBCMTD")

ADD_DEFINITIONS(-DQTCOLORPICKER_LIBRARY)
 
set(CMAKE_AUTOMOC ON)
set(CMAKE_INCLUDE_CURRENT_DIR ON) 
 
# ����QT UI�ļ�
FILE(GLOB QT_UIS "*.ui")
FILE(GLOB LIB_QT_RCS "*.qrc")

IF(Qt5Widgets_FOUND)
    QT5_ADD_RESOURCES( LIB_RC_SRCS ${LIB_QT_RCS} )
    QT5_WRAP_UI( UI_HDRS ${QT_UIS} )
    IF(Qt5Widgets_VERSION VERSION_LESS 5.2.0)
		QT5_WRAP_CPP( MOC_UI_SRCS ${UI_HDRS} OPTIONS "-f" )
    ELSE()
		QT5_WRAP_CPP( MOC_UI_SRCS ${UI_HDRS})
    ENDIF()
ELSE()
    INCLUDE( ${QT_USE_FILE} )
    QT4_ADD_RESOURCES( LIB_RC_SRCS ${LIB_QT_RCS} )
    QT4_WRAP_UI( UI_HDRS ${QT_UIS} )
    QT4_WRAP_CPP( UI_SRCS ${UI_HDRS} )
	QT4_WRAP_CPP( MOC_UI_SRCS ${UI_HDRS} OPTIONS "-f" )
ENDIF()

# ����ͷ�ļ�
FILE(GLOB ${LIB_NAME}_SRCS "*.cpp" )
FILE(GLOB ${LIB_NAME}_HEADERS "./*.h")


#tinyXML
#FILE(GLOB TinyXML_SRCS "./tinyxml/*.h" "./tinyxml/*.cpp")

INCLUDE_DIRECTORIES(
	${CMAKE_CURRENT_BINARY_DIR}
	${UI_HDRS}
	${PROJECT_INCLUDE_DIR}
)

#�������ļ��ɿ�ִ���ļ�
ADD_LIBRARY(${LIB_NAME} SHARED
   ${${LIB_NAME}_HEADERS}
   ${${LIB_NAME}_SRCS}
   ${MOC_UI_SRCS}
   ${LIB_RC_SRCS}
)

#����Link������
TARGET_LINK_LIBRARIES(${LIB_NAME}
)


IF ( Qt5Widgets_FOUND )
    qt5_use_modules( ${LIB_NAME} Gui Widgets OpenGL Xml Svg Test Quick Concurrent)
ELSE()   
TARGET_LINK_LIBRARIES(${LIB_NAME}
${QT_LIBRARIES} 
	${QT_QTOPENGL_LIBRARY} 
	${QT_QTCORE_LIBRARY} 
	${QT_QTGUI_LIBRARY} 
	${QT_QTSVG_LIBRARY}
	${QT_QTTEST_LIBRARY}
	${QT_QTXML_LIBRARY}
)
ENDIF( Qt5Widgets_FOUND )

# ������QT designer ����
SET_TARGET_PROPERTIES(${LIB_NAME} PROPERTIES VS_KEYWORD "Qt4VSv1.0")

# ������Ŀ��ǩ.
SET_PROPERTY(GLOBAL PROPERTY USE_FOLDERS On)
SET_TARGET_PROPERTIES(${LIB_NAME} PROPERTIES FOLDER "Lib")

# ���ù��̵�����
SET ( TARGET_OUTPUT_NAME ${LIB_NAME} )
SET_TARGET_PROPERTIES( ${LIB_NAME} PROPERTIES OUTPUT_NAME ${TARGET_OUTPUT_NAME} )

# ������Ŀ��ǩ.
SET_TARGET_PROPERTIES(${LIB_NAME} PROPERTIES PROJECT_LABEL "QtLib ${LIB_NAME}")
 
# QT ��ʱ�����ļ�����
SOURCE_GROUP(
    "Generated Files"
    FILES 
		${MOC_UI_SRCS}
)

# QT UI�ļ�����
SOURCE_GROUP(
    "Form Files"
    FILES  
	${QT_UIS}
	${LIB_RC_SRCS}
	${LIB_QT_RCS}
)


#������ϼ�Ŀ¼��ȡ��debug, release Ŀ¼
IF (MSVC_IDE) 
	SET_TARGET_PROPERTIES( ${LIB_NAME} PROPERTIES RUNTIME_OUTPUT_DIRECTORY  ${PROJECT_SOURCE_DIR}/bin )
	SET_TARGET_PROPERTIES( ${LIB_NAME} PROPERTIES RUNTIME_OUTPUT_DIRECTORY_DEBUG ${PROJECT_SOURCE_DIR}/bin/Debug )
	SET_TARGET_PROPERTIES( ${LIB_NAME} PROPERTIES RUNTIME_OUTPUT_DIRECTORY_RELEASE ${PROJECT_SOURCE_DIR}/bin/Release)
ENDIF() 
  





